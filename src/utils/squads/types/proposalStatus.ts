/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getUnitDecoder,
  getUnitEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

/**
 * The status of a proposal.
 * Each variant wraps a timestamp of when the status was set.
 */

export type ProposalStatus =
  | { __kind: 'Draft'; timestamp: bigint }
  | { __kind: 'Active'; timestamp: bigint }
  | { __kind: 'Rejected'; timestamp: bigint }
  | { __kind: 'Approved'; timestamp: bigint }
  | { __kind: 'Executing' }
  | { __kind: 'Executed'; timestamp: bigint }
  | { __kind: 'Cancelled'; timestamp: bigint };

export type ProposalStatusArgs =
  | { __kind: 'Draft'; timestamp: number | bigint }
  | { __kind: 'Active'; timestamp: number | bigint }
  | { __kind: 'Rejected'; timestamp: number | bigint }
  | { __kind: 'Approved'; timestamp: number | bigint }
  | { __kind: 'Executing' }
  | { __kind: 'Executed'; timestamp: number | bigint }
  | { __kind: 'Cancelled'; timestamp: number | bigint };

export function getProposalStatusEncoder(): Encoder<ProposalStatusArgs> {
  return getDiscriminatedUnionEncoder([
    ['Draft', getStructEncoder([['timestamp', getI64Encoder()]])],
    ['Active', getStructEncoder([['timestamp', getI64Encoder()]])],
    ['Rejected', getStructEncoder([['timestamp', getI64Encoder()]])],
    ['Approved', getStructEncoder([['timestamp', getI64Encoder()]])],
    ['Executing', getUnitEncoder()],
    ['Executed', getStructEncoder([['timestamp', getI64Encoder()]])],
    ['Cancelled', getStructEncoder([['timestamp', getI64Encoder()]])],
  ]);
}

export function getProposalStatusDecoder(): Decoder<ProposalStatus> {
  return getDiscriminatedUnionDecoder([
    ['Draft', getStructDecoder([['timestamp', getI64Decoder()]])],
    ['Active', getStructDecoder([['timestamp', getI64Decoder()]])],
    ['Rejected', getStructDecoder([['timestamp', getI64Decoder()]])],
    ['Approved', getStructDecoder([['timestamp', getI64Decoder()]])],
    ['Executing', getUnitDecoder()],
    ['Executed', getStructDecoder([['timestamp', getI64Decoder()]])],
    ['Cancelled', getStructDecoder([['timestamp', getI64Decoder()]])],
  ]);
}

export function getProposalStatusCodec(): Codec<
  ProposalStatusArgs,
  ProposalStatus
> {
  return combineCodec(getProposalStatusEncoder(), getProposalStatusDecoder());
}

// Data Enum Helpers.
export function proposalStatus(
  kind: 'Draft',
  data: GetDiscriminatedUnionVariantContent<
    ProposalStatusArgs,
    '__kind',
    'Draft'
  >
): GetDiscriminatedUnionVariant<ProposalStatusArgs, '__kind', 'Draft'>;
export function proposalStatus(
  kind: 'Active',
  data: GetDiscriminatedUnionVariantContent<
    ProposalStatusArgs,
    '__kind',
    'Active'
  >
): GetDiscriminatedUnionVariant<ProposalStatusArgs, '__kind', 'Active'>;
export function proposalStatus(
  kind: 'Rejected',
  data: GetDiscriminatedUnionVariantContent<
    ProposalStatusArgs,
    '__kind',
    'Rejected'
  >
): GetDiscriminatedUnionVariant<ProposalStatusArgs, '__kind', 'Rejected'>;
export function proposalStatus(
  kind: 'Approved',
  data: GetDiscriminatedUnionVariantContent<
    ProposalStatusArgs,
    '__kind',
    'Approved'
  >
): GetDiscriminatedUnionVariant<ProposalStatusArgs, '__kind', 'Approved'>;
export function proposalStatus(
  kind: 'Executing'
): GetDiscriminatedUnionVariant<ProposalStatusArgs, '__kind', 'Executing'>;
export function proposalStatus(
  kind: 'Executed',
  data: GetDiscriminatedUnionVariantContent<
    ProposalStatusArgs,
    '__kind',
    'Executed'
  >
): GetDiscriminatedUnionVariant<ProposalStatusArgs, '__kind', 'Executed'>;
export function proposalStatus(
  kind: 'Cancelled',
  data: GetDiscriminatedUnionVariantContent<
    ProposalStatusArgs,
    '__kind',
    'Cancelled'
  >
): GetDiscriminatedUnionVariant<ProposalStatusArgs, '__kind', 'Cancelled'>;
export function proposalStatus<K extends ProposalStatusArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isProposalStatus<K extends ProposalStatus['__kind']>(
  kind: K,
  value: ProposalStatus
): value is ProposalStatus & { __kind: K } {
  return value.__kind === kind;
}
