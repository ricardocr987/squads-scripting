/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { SQUADS_MULTISIG_PROGRAM_PROGRAM_ADDRESS } from '../programs';

/** DuplicateMember: Found multiple members with the same pubkey */
export const SQUADS_MULTISIG_PROGRAM_ERROR__DUPLICATE_MEMBER = 0x1770; // 6000
/** EmptyMembers: Members array is empty */
export const SQUADS_MULTISIG_PROGRAM_ERROR__EMPTY_MEMBERS = 0x1771; // 6001
/** TooManyMembers: Too many members, can be up to 65535 */
export const SQUADS_MULTISIG_PROGRAM_ERROR__TOO_MANY_MEMBERS = 0x1772; // 6002
/** InvalidThreshold: Invalid threshold, must be between 1 and number of members with Vote permission */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_THRESHOLD = 0x1773; // 6003
/** Unauthorized: Attempted to perform an unauthorized action */
export const SQUADS_MULTISIG_PROGRAM_ERROR__UNAUTHORIZED = 0x1774; // 6004
/** NotAMember: Provided pubkey is not a member of multisig */
export const SQUADS_MULTISIG_PROGRAM_ERROR__NOT_A_MEMBER = 0x1775; // 6005
/** InvalidTransactionMessage: TransactionMessage is malformed. */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_TRANSACTION_MESSAGE = 0x1776; // 6006
/** StaleProposal: Proposal is stale */
export const SQUADS_MULTISIG_PROGRAM_ERROR__STALE_PROPOSAL = 0x1777; // 6007
/** InvalidProposalStatus: Invalid proposal status */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_PROPOSAL_STATUS = 0x1778; // 6008
/** InvalidTransactionIndex: Invalid transaction index */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_TRANSACTION_INDEX = 0x1779; // 6009
/** AlreadyApproved: Member already approved the transaction */
export const SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_APPROVED = 0x177a; // 6010
/** AlreadyRejected: Member already rejected the transaction */
export const SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_REJECTED = 0x177b; // 6011
/** AlreadyCancelled: Member already cancelled the transaction */
export const SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_CANCELLED = 0x177c; // 6012
/** InvalidNumberOfAccounts: Wrong number of accounts provided */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_NUMBER_OF_ACCOUNTS = 0x177d; // 6013
/** InvalidAccount: Invalid account provided */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_ACCOUNT = 0x177e; // 6014
/** RemoveLastMember: Cannot remove last member */
export const SQUADS_MULTISIG_PROGRAM_ERROR__REMOVE_LAST_MEMBER = 0x177f; // 6015
/** NoVoters: Members don't include any voters */
export const SQUADS_MULTISIG_PROGRAM_ERROR__NO_VOTERS = 0x1780; // 6016
/** NoProposers: Members don't include any proposers */
export const SQUADS_MULTISIG_PROGRAM_ERROR__NO_PROPOSERS = 0x1781; // 6017
/** NoExecutors: Members don't include any executors */
export const SQUADS_MULTISIG_PROGRAM_ERROR__NO_EXECUTORS = 0x1782; // 6018
/** InvalidStaleTransactionIndex: `stale_transaction_index` must be <= `transaction_index` */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_STALE_TRANSACTION_INDEX = 0x1783; // 6019
/** NotSupportedForControlled: Instruction not supported for controlled multisig */
export const SQUADS_MULTISIG_PROGRAM_ERROR__NOT_SUPPORTED_FOR_CONTROLLED = 0x1784; // 6020
/** TimeLockNotReleased: Proposal time lock has not been released */
export const SQUADS_MULTISIG_PROGRAM_ERROR__TIME_LOCK_NOT_RELEASED = 0x1785; // 6021
/** NoActions: Config transaction must have at least one action */
export const SQUADS_MULTISIG_PROGRAM_ERROR__NO_ACTIONS = 0x1786; // 6022
/** MissingAccount: Missing account */
export const SQUADS_MULTISIG_PROGRAM_ERROR__MISSING_ACCOUNT = 0x1787; // 6023
/** InvalidMint: Invalid mint */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_MINT = 0x1788; // 6024
/** InvalidDestination: Invalid destination */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_DESTINATION = 0x1789; // 6025
/** SpendingLimitExceeded: Spending limit exceeded */
export const SQUADS_MULTISIG_PROGRAM_ERROR__SPENDING_LIMIT_EXCEEDED = 0x178a; // 6026
/** DecimalsMismatch: Decimals don't match the mint */
export const SQUADS_MULTISIG_PROGRAM_ERROR__DECIMALS_MISMATCH = 0x178b; // 6027
/** UnknownPermission: Member has unknown permission */
export const SQUADS_MULTISIG_PROGRAM_ERROR__UNKNOWN_PERMISSION = 0x178c; // 6028
/** ProtectedAccount: Account is protected, it cannot be passed into a CPI as writable */
export const SQUADS_MULTISIG_PROGRAM_ERROR__PROTECTED_ACCOUNT = 0x178d; // 6029
/** TimeLockExceedsMaxAllowed: Time lock exceeds the maximum allowed (90 days) */
export const SQUADS_MULTISIG_PROGRAM_ERROR__TIME_LOCK_EXCEEDS_MAX_ALLOWED = 0x178e; // 6030
/** IllegalAccountOwner: Account is not owned by Multisig program */
export const SQUADS_MULTISIG_PROGRAM_ERROR__ILLEGAL_ACCOUNT_OWNER = 0x178f; // 6031
/** RentReclamationDisabled: Rent reclamation is disabled for this multisig */
export const SQUADS_MULTISIG_PROGRAM_ERROR__RENT_RECLAMATION_DISABLED = 0x1790; // 6032
/** InvalidRentCollector: Invalid rent collector address */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_RENT_COLLECTOR = 0x1791; // 6033
/** ProposalForAnotherMultisig: Proposal is for another multisig */
export const SQUADS_MULTISIG_PROGRAM_ERROR__PROPOSAL_FOR_ANOTHER_MULTISIG = 0x1792; // 6034
/** TransactionForAnotherMultisig: Transaction is for another multisig */
export const SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_FOR_ANOTHER_MULTISIG = 0x1793; // 6035
/** TransactionNotMatchingProposal: Transaction doesn't match proposal */
export const SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_NOT_MATCHING_PROPOSAL = 0x1794; // 6036
/** TransactionNotLastInBatch: Transaction is not last in batch */
export const SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_NOT_LAST_IN_BATCH = 0x1795; // 6037
/** BatchNotEmpty: Batch is not empty */
export const SQUADS_MULTISIG_PROGRAM_ERROR__BATCH_NOT_EMPTY = 0x1796; // 6038
/** SpendingLimitInvalidAmount: Invalid SpendingLimit amount */
export const SQUADS_MULTISIG_PROGRAM_ERROR__SPENDING_LIMIT_INVALID_AMOUNT = 0x1797; // 6039
/** InvalidInstructionArgs: Invalid Instruction Arguments */
export const SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_INSTRUCTION_ARGS = 0x1798; // 6040
/** FinalBufferHashMismatch: Final message buffer hash doesnt match the expected hash */
export const SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_HASH_MISMATCH = 0x1799; // 6041
/** FinalBufferSizeExceeded: Final buffer size cannot exceed 4000 bytes */
export const SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_SIZE_EXCEEDED = 0x179a; // 6042
/** FinalBufferSizeMismatch: Final buffer size mismatch */
export const SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_SIZE_MISMATCH = 0x179b; // 6043
/** MultisigCreateDeprecated: multisig_create has been deprecated. Use multisig_create_v2 instead. */
export const SQUADS_MULTISIG_PROGRAM_ERROR__MULTISIG_CREATE_DEPRECATED = 0x179c; // 6044

export type SquadsMultisigProgramError =
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_APPROVED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_CANCELLED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_REJECTED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__BATCH_NOT_EMPTY
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__DECIMALS_MISMATCH
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__DUPLICATE_MEMBER
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__EMPTY_MEMBERS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_HASH_MISMATCH
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_SIZE_EXCEEDED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_SIZE_MISMATCH
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__ILLEGAL_ACCOUNT_OWNER
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_ACCOUNT
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_DESTINATION
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_INSTRUCTION_ARGS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_MINT
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_NUMBER_OF_ACCOUNTS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_PROPOSAL_STATUS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_RENT_COLLECTOR
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_STALE_TRANSACTION_INDEX
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_THRESHOLD
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_TRANSACTION_INDEX
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_TRANSACTION_MESSAGE
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__MISSING_ACCOUNT
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__MULTISIG_CREATE_DEPRECATED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__NO_ACTIONS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__NO_EXECUTORS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__NO_PROPOSERS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__NOT_A_MEMBER
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__NOT_SUPPORTED_FOR_CONTROLLED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__NO_VOTERS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__PROPOSAL_FOR_ANOTHER_MULTISIG
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__PROTECTED_ACCOUNT
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__REMOVE_LAST_MEMBER
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__RENT_RECLAMATION_DISABLED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__SPENDING_LIMIT_EXCEEDED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__SPENDING_LIMIT_INVALID_AMOUNT
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__STALE_PROPOSAL
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__TIME_LOCK_EXCEEDS_MAX_ALLOWED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__TIME_LOCK_NOT_RELEASED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__TOO_MANY_MEMBERS
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_FOR_ANOTHER_MULTISIG
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_NOT_LAST_IN_BATCH
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_NOT_MATCHING_PROPOSAL
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__UNAUTHORIZED
  | typeof SQUADS_MULTISIG_PROGRAM_ERROR__UNKNOWN_PERMISSION;

let squadsMultisigProgramErrorMessages:
  | Record<SquadsMultisigProgramError, string>
  | undefined;
if (process.env.NODE_ENV !== 'production') {
  squadsMultisigProgramErrorMessages = {
    [SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_APPROVED]: `Member already approved the transaction`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_CANCELLED]: `Member already cancelled the transaction`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__ALREADY_REJECTED]: `Member already rejected the transaction`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__BATCH_NOT_EMPTY]: `Batch is not empty`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__DECIMALS_MISMATCH]: `Decimals don't match the mint`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__DUPLICATE_MEMBER]: `Found multiple members with the same pubkey`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__EMPTY_MEMBERS]: `Members array is empty`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_HASH_MISMATCH]: `Final message buffer hash doesnt match the expected hash`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_SIZE_EXCEEDED]: `Final buffer size cannot exceed 4000 bytes`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__FINAL_BUFFER_SIZE_MISMATCH]: `Final buffer size mismatch`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__ILLEGAL_ACCOUNT_OWNER]: `Account is not owned by Multisig program`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_ACCOUNT]: `Invalid account provided`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_DESTINATION]: `Invalid destination`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_INSTRUCTION_ARGS]: `Invalid Instruction Arguments`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_MINT]: `Invalid mint`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_NUMBER_OF_ACCOUNTS]: `Wrong number of accounts provided`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_PROPOSAL_STATUS]: `Invalid proposal status`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_RENT_COLLECTOR]: `Invalid rent collector address`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_STALE_TRANSACTION_INDEX]: `\`stale_transaction_index\` must be <= \`transaction_index\``,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_THRESHOLD]: `Invalid threshold, must be between 1 and number of members with Vote permission`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_TRANSACTION_INDEX]: `Invalid transaction index`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__INVALID_TRANSACTION_MESSAGE]: `TransactionMessage is malformed.`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__MISSING_ACCOUNT]: `Missing account`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__MULTISIG_CREATE_DEPRECATED]: `multisig_create has been deprecated. Use multisig_create_v2 instead.`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__NO_ACTIONS]: `Config transaction must have at least one action`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__NO_EXECUTORS]: `Members don't include any executors`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__NO_PROPOSERS]: `Members don't include any proposers`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__NOT_A_MEMBER]: `Provided pubkey is not a member of multisig`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__NOT_SUPPORTED_FOR_CONTROLLED]: `Instruction not supported for controlled multisig`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__NO_VOTERS]: `Members don't include any voters`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__PROPOSAL_FOR_ANOTHER_MULTISIG]: `Proposal is for another multisig`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__PROTECTED_ACCOUNT]: `Account is protected, it cannot be passed into a CPI as writable`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__REMOVE_LAST_MEMBER]: `Cannot remove last member`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__RENT_RECLAMATION_DISABLED]: `Rent reclamation is disabled for this multisig`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__SPENDING_LIMIT_EXCEEDED]: `Spending limit exceeded`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__SPENDING_LIMIT_INVALID_AMOUNT]: `Invalid SpendingLimit amount`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__STALE_PROPOSAL]: `Proposal is stale`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__TIME_LOCK_EXCEEDS_MAX_ALLOWED]: `Time lock exceeds the maximum allowed (90 days)`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__TIME_LOCK_NOT_RELEASED]: `Proposal time lock has not been released`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__TOO_MANY_MEMBERS]: `Too many members, can be up to 65535`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_FOR_ANOTHER_MULTISIG]: `Transaction is for another multisig`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_NOT_LAST_IN_BATCH]: `Transaction is not last in batch`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__TRANSACTION_NOT_MATCHING_PROPOSAL]: `Transaction doesn't match proposal`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__UNAUTHORIZED]: `Attempted to perform an unauthorized action`,
    [SQUADS_MULTISIG_PROGRAM_ERROR__UNKNOWN_PERMISSION]: `Member has unknown permission`,
  };
}

export function getSquadsMultisigProgramErrorMessage(
  code: SquadsMultisigProgramError
): string {
  if (process.env.NODE_ENV !== 'production') {
    return (
      squadsMultisigProgramErrorMessages as Record<
        SquadsMultisigProgramError,
        string
      >
    )[code];
  }

  return 'Error message not available in production bundles.';
}

export function isSquadsMultisigProgramError<
  TProgramErrorCode extends SquadsMultisigProgramError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    SQUADS_MULTISIG_PROGRAM_PROGRAM_ADDRESS,
    code
  );
}
